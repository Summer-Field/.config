# cat << EOF > /dev/null

# -- general

setw -g xterm-keys on
set -s escape-time 0
set -sg repeat-time 300
set -s focus-events on
set -g mouse on
set -sg exit-empty on

set -q -g status-utf8 on
setw -q -g utf8 on

set -g visual-activity off
setw -g monitor-activity off
setw -g monitor-bell off

set -g history-limit 10000

# set-hook -g pane-focus-in "run -b 'bash ~/.config/tmux/fzf_panes.tmux update_mru_pane_ids'"
# bind -n M-w run -b 'bash ~/.config/tmux/fzf_panes.tmux new_window'

# reload configuration
bind r source-file ~/.config/tmux/tmux.conf \; display '~/.config/tmux/tmux.conf sourced'

set -ga update-environment '\
DISPLAY DBUS_SESSION_BUS_ADDRESS \
QT_IM_MODULE QT_QPA_PLATFORMTHEME \
SESSION_MANAGER \
XDG_CONFIG_HOME XDG_CACHE_HOME XDG_DATA_HOME\
XDG_MENU_PREFIX XDG_RUNTIME_DIR XDG_SESSION_CLASS \
XDG_SESSION_DESKTOP XDG_SESSION_TYPE XDG_CURRENT_DESKTOP \
XMODIFIERS \
FZF_DEFAULT_OPTS \
'
set-hook -g client-attached 'run -b "cut -c3- ~/.tmux.conf | sh -s update_env_event"'

# -- display
set -g base-index 1
setw -g pane-base-index 1

setw -g automatic-rename on
set -g renumber-windows on

set -g set-titles on

set -g display-panes-time 2000
set -g display-time 2000

set -g status-interval 1

# -- navigation
# remap prefix
unbind C-b
set-option -g prefix C-s
bind C-s send-prefix

# create session
bind C-c new-session

# window management
bind -n ø new-window -c "#{pane_current_path}" #M-o
bind -n ∏ break-pane                           #M-O
bind -n œ kill-pane                            #M-q

bind -n ‘ previous-window #M-[
bind -n “ next-window #M-]

# The M-number seems not work for me
# Use what actually print out instead
bind -n ¡ select-window -t 1 #M-1
bind -n ™ select-window -t 2 #M-2
bind -n £ select-window -t 3 #M-3
bind -n ¢ select-window -t 4 #M-4
bind -n ∞ select-window -t 5 #M-5
bind -n § select-window -t 6 #M-6
bind -n ¶ select-window -t 7 #M-7
bind -n • select-window -t 8 #M-8
bind -n ª select-window -t 9 #M-9

bind -n ⁄ join-pane -t 1 #M-1
bind -n € join-pane -t 2 #M-2
bind -n ‹ join-pane -t 3 #M-3
bind -n › join-pane -t 4 #M-4
bind -n ﬁ join-pane -t 5 #M-5
bind -n ﬂ join-pane -t 6 #M-6
bind -n ‡ join-pane -t 7 #M-7
bind -n ° join-pane -t 8 #M-8
bind -n · join-pane -t 9 #M-9

bind k split-window -vb -c "#{pane_current_path}"
bind j split-window -v -c "#{pane_current_path}"
bind h split-window -hb -c "#{pane_current_path}"
bind l split-window -h -c "#{pane_current_path}"

bind -n ƒ resize-pane -Z

# pane navigation
bind -n ˙ select-pane -L # M-h
bind -n ∆ select-pane -D # M-j
bind -n ˚ select-pane -U # M-k
bind -n ¬ select-pane -R # M-l
bind > swap-pane -D
bind < swap-pane -U
bind | swap-pane
bind -n   next-layout #M-Space

bind W choose-tree -Z
bind S choose-tree 'move-pane -v -s "%%"'
bind V choose-tree 'move-pane -h -s "%%"'

# pane resizing
bind -r C-h resize-pane -L 3 #M-H
bind -r C-j resize-pane -D 3 #M-J
bind -r C-k resize-pane -U 3 #M-K
bind -r C-l resize-pane -R 3 #M-L

# copy mode configuration
set -g status-keys emacs
set -g mode-keys vi

bind -n √ copy-mode # M-v

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi h send-keys -X cursor-left
bind -T copy-mode-vi l send-keys -X cursor-right
bind -T copy-mode-vi k send-keys -X cursor-up
bind -T copy-mode-vi j send-keys -X cursor-down
bind -T copy-mode-vi w send-keys -X next-word-end
bind -T copy-mode-vi K send-keys -N 5 -X cursor-up
bind -T copy-mode-vi J send-keys -N 5 -X cursor-down
bind -T copy-mode-vi H send-keys -X start-of-line
bind -T copy-mode-vi L send-keys -X end-of-line
bind -T copy-mode-vi Y send-keys -X copy-end-of-line
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi = send-keys -X search-again
bind -T copy-mode-vi = send-keys -X search-reverse


bind b list-buffers
bind p paste-buffer

# -- toggle_syn_input
bind C-g if-shell '[[ $(tmux showw synchronize-panes | cut -d\  -f2) == "on" ]]' \
'setw synchronize-panes off; set -g pane-border-style fg=magenta' \
'setw synchronize-panes on; set -g pane-border-style fg=red'

# -- toggle_status
bind s if-shell '[[ $(tmux show -g status | cut -d\  -f2) == "on" ]]' \
'set -g status off' \
'set -g status on'

# -- theme
#set -g status off

# panes
#setw -g pane-border-status bottom
setw -g pane-border-format '#[bold]#{?#{&&:#{pane_active},#{client_prefix}},#[underscore],}\
#{?pane_active,❐ #S:#I/#{session_windows} ,}#{?window_zoomed_flag,⬢,❄} #P ⇒ #{pane_tty} #{pane_current_command}'
#set -g pane-active-border-style fg=brightblue
#set -g pane-border-style fg=magenta

# windows
set -g status-justify 'left'
# set -g status-left-length 90
# set -g status-right-length 140
# setw -g window-status-separator ''

# default statusbar colors
# set -g status-bg default
# set -g status-left ' #[fg=magenta,bold]❐ #S'
# set -g status-left '#[fg=brightyellow] #{?client_prefix,⌨ ,  }  #[fg=magenta,bold] %Y-%m-%d %H:%M '
# set -g status-right '#(rainbarf --battery --remaining --bolt --tmux --rgb)'
# set -g status-left "#[fg=magenta,bold] %Y-%m-%d %H:%M | #[fg=brightblue]#(curl icanhazip.com) #(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #(ifconfig en3 | grep 'inet ' | awk '{print \"en3 \" $2}') #(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "
# setw -g window-status-format '#[fg=brightblue] #I #W '
# setw -g window-status-current-format '#[fg=magenta,bold] #I #W:#F'
# setw -g window-status-activity-style bg=black
# setw -g window-status-bell-style bg=black
# set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"

# set-option -g status-left "#(~/.config/tmux/tmux-powerline/powerline.sh left)"
# set-option -g status-right "#(~/.config/tmux/tmux-powerline/powerline.sh right)"
 
# available plugins: battery, cpu-usage, git, gpu-usage, ram-usage, tmux-ram-usage, network, network-bandwidth, network-ping, attached-clients, network-vpn, weather, time, spotify-tui, kubernetes-context, synchronize-panes
set -g @dracula-plugins "weather network time"

# available colors: white, gray, dark_gray, light_purple, dark_purple, cyan, green, orange, red, pink, yellow
# set -g @dracula-[plugin-name]-colors "[background] [foreground]"
set -g @dracula-tmux-ram-usage-colors "yellow dark_gray"

set -g @dracula-show-powerline true

# for left
set -g @dracula-show-left-sep 

# for right symbol (can set any symbol you like as seperator)
set -g @dracula-show-right-sep 

set -g @dracula-show-flags true

set -g @dracula-refresh-rate 100

# it can accept `session`, `smiley`, `window`, or any character.
set -g @dracula-show-left-icon smiley

set -g @dracula-left-icon-padding 0

set -g @dracula-border-contrast true

# set -g @dracula-fixed-location "Chengdu, China"
set -g @dracula-show-fahrenheit false

set -g @dracula-show-timezone true
set -g @dracula-day-month false
set -g @dracula-military-time true

#---
set-option default-terminal "tmux-256color"
set-option -a terminal-overrides ",*256col*:RGB"

# List of plugins
set -g @plugins 'tmux-plugins/tpm'
set -g @plugins 'tmux-plugins/tmux-sensible'
set -g @plugins 'dracula/tmux'

run '~/.config/tmux/plugins/tpm/tpm'
